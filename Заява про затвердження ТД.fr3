<?xml version="1.0" encoding="utf-8"?>
<TfrxReport Version="3.24" DotMatrixReport="False" EngineOptions.MaxMemSize="2000" IniFile="\Software\Fast Reports" PreviewOptions.Buttons="4095" PreviewOptions.Zoom="1" PrintOptions.Printer="По умолчанию" ReportOptions.CreateDate="45546,5993475232" ReportOptions.Description.Text="" ReportOptions.LastChange="45546,6112300463" ScriptLanguage="PascalScript" ScriptText.Text="var&#13;&#10;   NameHto, NameSh, ShName, NameKomy, NameKomySh, NameKomyShGr, NameKogo, NameKogoSh, Teritor,&#13;&#10;   FunkNaz, FunkNazW, ZemVlAdr, IspName, IspNameKogo, IspNameKomy, IspNameKem, IspAdress, IspPreds,&#13;&#10;   IspPredsDolj, LandPost, StrZeml, StrZemlKogo, Land, LandPostKogo, NameKemSh, NameAdress, NameKSP,&#13;&#10;   NameKSPKogo, Sovet, TArea, TPlow, NasPunkt, RaIObl, PidstavName, PidstavDate, PidstavNum,&#13;&#10;   PidstavSer, PidstavPreds, PidstavOrganKogo, DomVl, PidstavaNameForInf, InfoOFGosact, GosActName, InfoPidstava,&#13;&#10;   PidstavaBuilding, Note, UserTypeDoc, TypePasp, Spadkoemec, SpadkoemecGr, SpadkoemecKomu, SpadkoemecKogo,&#13;&#10;   SpadkoemecFIOShort, SpadkoemecShortFIO, SpadkoemecKem, AdressTeritor, Oblast, Region, TeritorGromada,&#13;&#10;   NameTeritorGromada, TypeNasPunckt, City, Street,&#13;&#10;   ParcelAdressForSplit, NameUsersHto, NameUsersKomy, NameUsersKogo, KatZem : string;&#13;&#10;   PosInfoPidstava, len, countForNameUsers, NomVl : integer;&#13;&#10;   IfPosPasLargestZero : boolean;&#13;&#10;&#13;&#10;&#13;&#10;    //Проверяем есть ли поле госакта&#13;&#10;    procedure Page1OnBeforePrint(Sender: TfrxComponent);&#13;&#10;       begin&#13;&#10;       If (RECORDCOUNT( 'DM1.QiGosakt') &#62; 0) then&#13;&#10;               begin&#13;&#10;                 //Page1.Visible := false;&#13;&#10;               end;&#13;&#10;       end;&#13;&#10;&#13;&#10;   //--------------------------------------------------------------------------------------------------&#13;&#10;&#13;&#10;begin&#13;&#10;&#13;&#10;       //Проверяем нужно ли документацию делать на наследника&#13;&#10;        If (LOCATEDATA ( 'DM1.QsPeople', 'ID_People', &#60;DM1.TbUser.&#34;ID_People&#34;&#62;)) then&#13;&#10;        begin&#13;&#10;               If LENGTH(&#60;DM1.TbUser.&#34;Note&#34;&#62;) &#62; 0 then&#13;&#10;               Spadkoemec := &#60;DM1.TbUser.&#34;Note&#34;&#62;;&#13;&#10;               SpadkoemecGr := 'гр. ' + Spadkoemec;&#13;&#10;               SpadkoemecKomu := Family2(Spadkoemec);&#13;&#10;               SpadkoemecKogo := Family3(Spadkoemec);&#13;&#10;               SpadkoemecKem := Family1(Spadkoemec);&#13;&#10;               SpadkoemecFIOShort := FamilyShort(Spadkoemec);&#13;&#10;               SpadkoemecShortFIO := ShortFamily(Spadkoemec);&#13;&#10;        end;&#13;&#10;&#13;&#10;        If (RECORDCOUNT ('DM1.QsPeople') &#62; 0) Then&#13;&#10;        begin&#13;&#10;        If (LOCATEDATA ( 'DM1.QsPeople', 'ID_People', &#60;DM1.TbUser.&#34;ID_People&#34;&#62;)) then&#13;&#10;&#13;&#10;               If (LocateData('DM2.TbTypeDoc', 'ID_TypeDoc', &#60;DM1.QsPeople.&#34;ID_TypeDoc&#34;&#62;)) then&#13;&#10;               begin&#13;&#10;               TypePasp := LowerFirst(&#60;DM2.TbTypeDoc.&#34;Name&#34;&#62;);&#13;&#10;               end&#13;&#10;&#13;&#10;        end;&#13;&#10;&#13;&#10;//----------------------------------------------------------------------------------------------&#13;&#10;//Инициализация таблици ListUsers&#13;&#10;&#13;&#10;{&#13;&#10;&#13;&#10;           ListSmej.SQL.Text := 'Select P.ID_Polygon, P.Number, V.* ' +&#13;&#10;          'From Polygon L, Point P, Vector V ' +&#13;&#10;          'Where (L.ID_Object = ' + IntToStr(&#60;DM1.QbObject.&#34;ID_Object&#34;&#62;) + ') and (P.ID_Polygon = L.ID_Polygon) and ' +&#13;&#10;                '(V.ID_Point = P.ID_Point) and (V.OpisWrite is not null) and (Len(OpisWrite) &#62; 2)'+&#13;&#10;          'Order By P.ID_Polygon, P.SortNumber, V.Litera';&#13;&#10;&#13;&#10;                 ListUsers.SQL.Text := 'Select ID_TypeOwner, ID_People, ID_Firm, NameUser ' +&#13;&#10;              'From UserRec ' +&#13;&#10;              'Where (ID_Object = ' + IntToStr(&#60;DM1.QbObject.&#34;ID_Object&#34;&#62;) + ') and (NameUser = ''' + DoubleSkb(CBUsersL.Text) + ''')';&#13;&#10;&#13;&#10;}&#13;&#10;&#13;&#10;       ListUsers.SQL.Text := 'Set DateFormat dmy; ' +&#13;&#10;              'Select U.ID_TypeOwner, U.ID_People, U.ID_Firm, Max(U.NameUser) NameUser ' +&#13;&#10;              'From UserRec U Left Join TechDocLnk L on (L.ID_Object = ' + IntToStr(&#60;DM1.QbObject.&#34;ID_Object&#34;&#62;) + ') and (L.ID_User = U.ID_User) ' +&#13;&#10;                             'Left Join TechDoc T on (T.ID_TechDoc = L.ID_TechDoc) ' +&#13;&#10;              'Where (U.ID_Object = ' + IntToStr(&#60;DM1.QbObject.&#34;ID_Object&#34;&#62;) + ') and (U.DateFirst &#60;= GETDATE()) and ((U.DateLast is Null) or ' +&#13;&#10;                  '(U.DateLast &#62; GETDATE())) and (Not(T.ID_TypeTake in (3,5,7,9)) or (T.ID_TypeTake is Null)) ' +&#13;&#10;              'Group by U.ID_TypeOwner, U.ID_People, U.ID_Firm';&#13;&#10;&#13;&#10;         ListUsers.Open;&#13;&#10;&#13;&#10;       If ListUsers.RecordCount &#62; 1 then&#13;&#10;       begin&#13;&#10;       ListUsers.First;&#13;&#10;&#13;&#10;       countForNameUsers := 0;&#13;&#10;&#13;&#10;       While ListUsers.EOF = false do&#13;&#10;       begin&#13;&#10;&#13;&#10;               if countForNameUsers &#62; 0 then&#13;&#10;                       begin&#13;&#10;                       NameUsersKomy := NameUsersKomy + ', ';&#13;&#10;                       NameUsersKogo := NameUsersKogo + ', ';&#13;&#10;                       end;&#13;&#10;               NameUsersHto := &#60;ListUsers.&#34;NameUser&#34;&#62;;&#13;&#10;               NameUsersKomy := NameUsersKomy + 'гр. ' + Family2(&#60;ListUsers.&#34;NameUser&#34;&#62;);&#13;&#10;               NameUsersKogo := NameUsersKogo + 'гр. ' + Family3(&#60;ListUsers.&#34;NameUser&#34;&#62;);&#13;&#10;               countForNameUsers := countForNameUsers + 1;&#13;&#10;               ListUsers.Next;&#13;&#10;               end;&#13;&#10;       end;&#13;&#10;&#13;&#10;&#13;&#10;   //---------------------------------------------------------------------------------------------------&#13;&#10;   //Данные землевладельца&#13;&#10;   NameHto      := ''; //Владелец&#13;&#10;   NameSh       := ''; //Владелец с инициалами&#13;&#10;   ShName       := ''; //Владелец с инициалами вначале&#13;&#10;   NameKomy     := ''; //Кому&#13;&#10;   NameKomySh   := ''; //Кому с инициалами&#13;&#10;   NameKomyShGr := ''; //Кому с инициалами гр.&#13;&#10;   NameKogo     := ''; //Кого&#13;&#10;   NameKogoSh   := ''; //Кого с инициалами&#13;&#10;   NameKemSh    := ''; //Кем с инициалами&#13;&#10;   NameAdress   := ''; //Адрес&#13;&#10;&#13;&#10;&#13;&#10;   If Pos('інший документ', TypePasp) &#62; 0 Then&#13;&#10;   begin&#13;&#10;        NameHto := Spadkoemec;&#13;&#10;        NameSh := SpadkoemecFIOShort;&#13;&#10;        ShName := SpadkoemecShortFIO;&#13;&#10;        NameKomy := 'гр. ' + SpadkoemecKomu;&#13;&#10;        NameKomySh := 'гр. ' +  FamilyShort(NameKomy);&#13;&#10;        NameKogo := SpadkoemecKogo;&#13;&#10;        NameKogoSh := 'гр. ' + FamilyShort(NameKogo);&#13;&#10;        NameKemSh := FamilyShort(SpadkoemecKem);&#13;&#10;        NameAdress := &#60;DM1.QsPeople.&#34;Address&#34;&#62;;&#13;&#10;   end else&#13;&#10;   begin&#13;&#10;       If LOCATEDATA( 'DM2.TbTypeOwner', 'ID_TypeOwner', &#60;DM1.TbUser.&#34;ID_TypeOwner&#34;&#62;) = True Then&#13;&#10;&#13;&#10;               If (&#60;DM2.TbTypeOwner.&#34;ID_TypeUser&#34;&#62; = True) And (LOCATEDATA( 'DM1.QsFirm', 'ID_Firm', &#60;DM1.TbUser.&#34;ID_Firm&#34;&#62;) = True) Then&#13;&#10;&#13;&#10;               NameHto := &#60;DM1.QsFirm.&#34;Name_Who&#34;&#62;;&#13;&#10;               NameSh := &#60;DM1.QsFirm.&#34;Name_Small&#34;&#62;;&#13;&#10;               ShName := &#60;DM1.QsFirm.&#34;Name_Small&#34;&#62;;&#13;&#10;               NameKomy := &#60;DM1.QsFirm.&#34;Name_Towhom&#34;&#62;;&#13;&#10;               NameKomySh := &#60;DM1.QsFirm.&#34;Name_Small&#34;&#62;;&#13;&#10;               NameKomyShGr := &#60;DM1.QsFirm.&#34;Name_Small&#34;&#62;;&#13;&#10;               NameKogo := &#60;DM1.QsFirm.&#34;Name_Whom&#34;&#62;;&#13;&#10;               NameKogoSh := &#60;DM1.QsFirm.&#34;Name_Small&#34;&#62;;&#13;&#10;               NameKemSh := &#60;DM1.QsFirm.&#34;Name_Small&#34;&#62;;&#13;&#10;               NameAdress := &#60;DM1.QsFirm.&#34;Address&#34;&#62;;&#13;&#10;&#13;&#10;&#13;&#10;               If (&#60;DM2.TbTypeOwner.&#34;ID_TypeUser&#34;&#62; = False) And (LOCATEDATA( 'DM1.QsPeople', 'ID_People', &#60;DM1.TbUser.&#34;ID_People&#34;&#62;) = True) Then&#13;&#10;&#13;&#10;               NameHto := &#60;DM1.QsPeople.&#34;Family&#34;&#62;;&#13;&#10;               NameSh := 'гр. ' + FamilyShort(&#60;DM1.QsPeople.&#34;Family&#34;&#62;);&#13;&#10;               ShName := ShortFamily(&#60;DM1.QsPeople.&#34;Family&#34;&#62;);&#13;&#10;               NameKomy := 'гр. ' + &#60;DM1.QsPeople.&#34;Family2&#34;&#62;;&#13;&#10;               NameKomySh := 'гр. ' + FamilyShort(&#60;DM1.QsPeople.&#34;Family2&#34;&#62;);&#13;&#10;               NameKomyShGr := 'гр. ' + FamilyShort(&#60;DM1.QsPeople.&#34;Family2&#34;&#62;);&#13;&#10;               NameKogo := &#60;DM1.QsPeople.&#34;Family3&#34;&#62;;&#13;&#10;               NameKogoSh := 'гр. ' + FamilyShort(&#60;DM1.QsPeople.&#34;Family3&#34;&#62;);&#13;&#10;               NameKemSh := 'гр. ' + &#60;DM1.QsPeople.&#34;Family1&#34;&#62;;&#13;&#10;               NameAdress := &#60;DM1.QsPeople.&#34;Address&#34;&#62;;&#13;&#10;&#13;&#10;   end;&#13;&#10;&#13;&#10;   //---------------------------------------------------------------------------------------------------&#13;&#10;   //Функциональное назначение&#13;&#10;&#13;&#10;   FunkNaz  := ''; //Функциональное или целевые использование&#13;&#10;&#13;&#10;   If LOCATEDATA( 'DM2.TbUses', 'ID_Uses', &#60;DM1.TbUser.&#34;ID_Uses&#34;&#62;) = True Then&#13;&#10;   begin&#13;&#10;      FunkNaz := LOWERCASE(Trim(&#60;DM2.TbUses.&#34;Name&#34;&#62;));&#13;&#10;&#13;&#10;      If Not((Pos('для ', FunkNaz) &#62; 0) or (Pos('Для ', FunkNaz) &#62; 0)) then&#13;&#10;         FunkNaz := 'для ' + FunkNaz;&#13;&#10;   end;&#13;&#10;&#13;&#10;   //---------------------------------------------------------------------------------------------------&#13;&#10;   //Категория земель&#13;&#10;   KatZem := '';&#13;&#10;   KatZem := Copy(&#60;DM2.TbTypeGround.&#34;Name&#34;&#62;, 0, (Pos('лі', &#60;DM2.TbTypeGround.&#34;Name&#34;&#62;) - 1)) + 'ель';&#13;&#10;   KatZem := KatZem + Copy(&#60;DM2.TbTypeGround.&#34;Name&#34;&#62;, LENGTH(KatZem), LENGTH(&#60;DM2.TbTypeGround.&#34;Name&#34;&#62;));&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;   //---------------------------------------------------------------------------------------------------&#13;&#10;   //Где находиться участок&#13;&#10;&#13;&#10;   Teritor := 'на території ';&#13;&#10;   Sovet := ' ';   //Совет&#13;&#10;   NasPunkt := ''; //Населённый пункт&#13;&#10;   RaIObl := ''; //Район и область&#13;&#10;   //Совет&#13;&#10;   if LENGTH(Name_Advice) &#62; 0 then&#13;&#10;   begin&#13;&#10;     if Pos('ька ', Name_Advice) &#62; 0 then&#13;&#10;       if Pos('сільська', Name_Advice) &#62; 0 then&#13;&#10;         Teritor := Teritor + Copy(Name_Advice, 1, Pos('ька ', Name_Advice)) + 'кої сільської ради '&#13;&#10;       else&#13;&#10;         if Pos('селищна', Name_Advice) &#62; 0 then&#13;&#10;           Teritor := Teritor + Copy(Name_Advice, 1, Pos('ька ', Name_Advice)) + 'кої селищної ради '&#13;&#10;         else&#13;&#10;           Teritor := Teritor + Name_Advice + ' '&#13;&#10;     else&#13;&#10;       Teritor := Teritor + Name_Advice + ' ';&#13;&#10;   end;&#13;&#10;&#13;&#10;   Sovet := Teritor;&#13;&#10;&#13;&#10;   //Район&#13;&#10;   if LENGTH(Name_Region) &#62; 0 then&#13;&#10;   begin&#13;&#10;     if Pos('ький ', Name_Region) &#62; 0 then&#13;&#10;     begin&#13;&#10;       Teritor := Teritor + Copy(Name_Region, 1, Pos('ький ', Name_Region)) + 'кого району ';&#13;&#10;       RaIObl := Copy(Name_Region, 1, Pos('ький ', Name_Region)) + 'кого району '&#13;&#10;     end&#13;&#10;     else&#13;&#10;       if Pos('ний ', Name_Region) &#62; 0 then&#13;&#10;       begin&#13;&#10;         Teritor := Teritor + Copy(Name_Region, 1, Pos('ний ', Name_Region)) + 'ного району ';&#13;&#10;         RaIObl := Copy(Name_Region, 1, Pos('ний ', Name_Region)) + 'ного району ';&#13;&#10;       end&#13;&#10;       else&#13;&#10;       begin&#13;&#10;         Teritor := Teritor + Name_Region + ' ';&#13;&#10;         RaIObl := Name_Region + ' ';&#13;&#10;       end&#13;&#10;   end;&#13;&#10;&#13;&#10;   //Область&#13;&#10;   if LENGTH(Name_Area) &#62; 0 then&#13;&#10;   begin&#13;&#10;     if Pos('ька ', Name_Area) &#62; 0 then&#13;&#10;     begin&#13;&#10;       Teritor := Teritor + Copy(Name_Area, 1, Pos('ька ', Name_Area)) + 'кої області ';&#13;&#10;       RaIObl := RaIObl + Copy(Name_Area, 1, Pos('ька ', Name_Area)) + 'кої області ';&#13;&#10;     end&#13;&#10;     else&#13;&#10;     begin&#13;&#10;       Teritor := Teritor + Name_Area + ' ';&#13;&#10;       RaIObl := RaIObl + Name_Area + ' '&#13;&#10;     end;&#13;&#10;   end;&#13;&#10;&#13;&#10;   //Удаление запятой с пробелом в конце строки&#13;&#10;   If Length(Trim(Teritor)) &#62; 1 then&#13;&#10;     Teritor := Copy(Teritor, 1, LENGTH(Teritor)-1);&#13;&#10;   If Length(Trim(RaIObl)) &#62; 1 then&#13;&#10;     RaIObl := Copy(RaIObl, 1, LENGTH(RaIObl)-1);&#13;&#10;&#13;&#10;   //Населённый пункт&#13;&#10;&#13;&#10;   NasPunkt := Trim(Name_Place);&#13;&#10;&#13;&#10;   If (Pos( 'м.', Name_Advice) &#62; 0) or (Pos( 'с.', Name_Advice) &#62; 0) or (Pos( 'смт.', Name_Advice) &#62; 0) or (Pos( 'с-', Name_Advice) &#62; 0) Then&#13;&#10;      NasPunkt := Trim(Name_Advice);&#13;&#10;&#13;&#10;   If (Pos( 'м.', Name_Region) &#62; 0) or (Pos( 'с.', Name_Region) &#62; 0) or (Pos( 'смт.', Name_Region) &#62; 0) or (Pos( 'с-', Name_Region) &#62; 0) Then&#13;&#10;      NasPunkt := Trim(Name_Region);&#13;&#10;&#13;&#10;   If (Pos( 'м.', Name_Area) &#62; 0) or (Pos( 'с.', Name_Area) &#62; 0) or (Pos( 'смт.', Name_Area) &#62; 0) or (Pos( 'с-', Name_Area) &#62; 0) Then&#13;&#10;      NasPunkt := Trim(Name_Area);&#13;&#10;&#13;&#10; //---------------------------------------------------------------------------------------------------------------------------------------------&#13;&#10;//Адреса версія 2&#13;&#10;&#13;&#10;   AdressTeritor := 'на території ';&#13;&#10;   Oblast := '';&#13;&#10;   Region := '';&#13;&#10;   TeritorGromada := '';&#13;&#10;   NameTeritorGromada := '';&#13;&#10;   TypeNasPunckt := '';&#13;&#10;   City := '';&#13;&#10;   Street := '';&#13;&#10;   ParcelAdressForSplit := &#60;DM1.QbObject.&#34;Address&#34;&#62;;&#13;&#10;&#13;&#10;  begin&#13;&#10;  //Область&#13;&#10;  Oblast := Copy(ParcelAdressForSplit, 0, (Pos(',', ParcelAdressForSplit) - 1));&#13;&#10;  Delete(ParcelAdressForSplit, 1, (LENGTH(Oblast) + 2));&#13;&#10;  Trim(ParcelAdressForSplit);&#13;&#10;&#13;&#10;  //Район&#13;&#10;  Region := Copy(ParcelAdressForSplit, 0, (Pos(',', ParcelAdressForSplit) - 1));&#13;&#10;  Delete(ParcelAdressForSplit, 1, (LENGTH(Region) + 2));&#13;&#10;  Trim(ParcelAdressForSplit);&#13;&#10;&#13;&#10;  //Територіальна громада&#13;&#10;  TeritorGromada := Copy(ParcelAdressForSplit, 0, (Pos(',', ParcelAdressForSplit) - 1));&#13;&#10;  Delete(ParcelAdressForSplit, 1, (LENGTH(TeritorGromada) + 2));&#13;&#10;  Trim(ParcelAdressForSplit);&#13;&#10;&#13;&#10;  //Назва тер.громади&#13;&#10;  NameTeritorGromada := Copy(TeritorGromada, 0, (Pos(' ', TeritorGromada) - 1));&#13;&#10;&#13;&#10;  //Тип населеного пункту&#13;&#10;  TypeNasPunckt :=  Copy(TeritorGromada, (Pos(' ', TeritorGromada) + 1), (Pos(' те', TeritorGromada) - (LENGTH(NameTeritorGromada) + 2)));&#13;&#10;&#13;&#10;  //Місто&#13;&#10;  City := Copy(ParcelAdressForSplit, 0, (Pos(',', ParcelAdressForSplit) - 1));&#13;&#10;  Delete(ParcelAdressForSplit, 1, (LENGTH(City) + 2));&#13;&#10;  Trim(ParcelAdressForSplit);&#13;&#10;&#13;&#10;  AdressTeritor := AdressTeritor +&#13;&#10;                       Copy(Oblast, 0, Pos('ка', Oblast)) + 'ої області, ' +&#13;&#10;                       Copy(Region, 0, Pos('кий', Region)) + 'ого району, ' +&#13;&#10;                       Copy(NameTeritorGromada, 0, Pos('ка', TeritorGromada)) + 'ої ' + Copy(TypeNasPunckt, 0, Pos('ка', TypeNasPunckt)) +&#13;&#10;                       'ої' + ' територіальної громади' +&#13;&#10;                       ' в ' + City +&#13;&#10;                       ', ' + ParcelAdressForSplit;&#13;&#10;&#13;&#10;  end;&#13;&#10;&#13;&#10;end." PropData
  <TfrxReportPage Name="Page1" PaperWidth="210" PaperHeight="297" PaperSize="9" LeftMargin="20" RightMargin="10" TopMargin="10" BottomMargin="10" ColumnWidth="0" ColumnPositions.Text="" HGuides.Text="" VGuides.Text="" OnBeforePrint="Page1OnBeforePrint">
    <TfrxMasterData Name="MasterData1" Height="650,07916" Left="0" Top="18,89765" Width="680,3154" ColumnWidth="0" ColumnGap="0" RowCount="1" Stretched="True">
      <TfrxRichView Name="Rich1" Left="0" Top="154,96073" Width="676,53587" Height="483,77984" StretchMode="smActualHeight" GapX="2" GapY="1" PropData
    </TfrxMasterData>
    <TfrxADOQuery Name="ListUsers" UserName="ListUsers" CloseDataSource="True" FieldAliases.Text="" SQL.Text="" CommandTimeout="30" PropData="0A506172616D65746572730100"/>
  </TfrxReportPage>
</TfrxReport>
